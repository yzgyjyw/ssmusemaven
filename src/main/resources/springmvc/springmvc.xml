<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">


	<!-- 使用注解的方式 -->
	<mvc:annotation-driven conversion-service="conversionService" />

	<!-- 使用非注解的方式 -->
	<!-- 非注解的处理器映射器 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	</bean>

	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.njust.ssm.interceptor.UserAuthentificationInterceptor"></bean>
		</mvc:interceptor>

	</mvc:interceptors>


	<!-- 非注解的处理器适配器 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="customerWebBinder"></property>
		<!-- 配置json解析器 -->
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
			</list>
		</property>
	</bean>

	<!-- 使用非注解的形式注入Converter -->
	<!-- 第一步需要自定义一个webBinder，这个里面需要配置一个转换器，然后将这个webBinder注入到处理器适配器(RequestMappingHandlerAdapter)中 -->
	<bean id="customerWebBinder"
		class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="conversionService" ref="conversionService" />
		<property name="validator" ref="validator"></property>
	</bean>


	<!--扫描所有的Controller -->
	<context:component-scan base-package="com.njust.ssm.controller" />

	<!-- 配置springmvc的转换器 这一步是必须要有的，不管采用的是注解的方式的，还是非注解的方式的 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!-- 注意这里使用的应该是bean -->
				<bean class="com.njust.ssm.controller.converter.CustomerDateConverter"></bean>
			</set>
		</property>
	</bean>

	<!-- 配置springmvc的validator -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
		<property name="validationMessageSource" ref="validationMessageSource"></property>
	</bean>

	<!-- 配置springmvc的validation的错误信息 -->
	<bean id="validationMessageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:validation</value>
			</list>
		</property>

		<property name="fileEncodings" value="utf-8"></property>

		<property name="cacheSeconds" value="120"></property>
	</bean>

	<!-- 配置文件上传的解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的大小的最大值，单位bytes -->
		<property name="maxUploadSize" value="10485760" />
		<property name="defaultEncoding" value="utf-8" />
	</bean>

	<!-- 配置异常处理器 -->
	<bean class="com.njust.ssm.exception.resolver.CustomerExceptionResolver"></bean>

	<!--添加视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 使用restful的url的时候，注意要禁止其对静态资源的访问 -->
	<mvc:resources location="/js/" mapping="/js/**" />


</beans>